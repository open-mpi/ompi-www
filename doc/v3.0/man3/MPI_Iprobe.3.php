<?php
$topdir = "../../..";
$title = "MPI_Iprobe(3) man page (version 3.0.3)";
$meta_desc = "Open MPI v3.0.3 man page: MPI_IPROBE(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
     <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>MPI_Iprobe</b> - Nonblocking test for a message.
<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
int MPI_Iprobe(int source, int tag, MPI_Comm comm, int *flag,
<tt> </tt>&nbsp;<tt> </tt>&nbsp;MPI_Status *status)
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
<br>
<pre>USE MPI
! or the older form: INCLUDE &rsquo;mpif.h&rsquo;
MPI_IPROBE(SOURCE, TAG, COMM, FLAG, STATUS, IERROR)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;LOGICAL<tt> </tt>&nbsp;<tt> </tt>&nbsp;FLAG
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER<tt> </tt>&nbsp;<tt> </tt>&nbsp;SOURCE, TAG, COMM, STATUS(MPI_STATUS_SIZE), IERROR
</pre>
<h2><a name='sect4' href='#toc4'>Fortran 2008 Syntax</a></h2>
<br>
<pre>USE mpi_f08
MPI_Iprobe(source, tag, comm, flag, status, ierror)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, INTENT(IN) :: source, tag
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Comm), INTENT(IN) :: comm
<tt> </tt>&nbsp;<tt> </tt>&nbsp;LOGICAL, INTENT(OUT) :: flag
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Status) :: status
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, OPTIONAL, INTENT(OUT) :: ierror
</pre>
<h2><a name='sect5' href='#toc5'>Input Parameters</a></h2>

<dl>

<dt>source </dt>
<dd>Source rank or MPI_ANY_SOURCE (integer). </dd>

<dt>tag </dt>
<dd>Tag
value or MPI_ANY_TAG (integer). </dd>

<dt>comm </dt>
<dd>Communicator (handle).
<p> </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>flag
</dt>
<dd>Message-waiting flag (logical). </dd>

<dt>status </dt>
<dd>Status object (status). </dd>

<dt>IERROR </dt>
<dd>Fortran
only: Error status (integer).
<p> </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
The <a href="../man3/MPI_Probe.3.php">MPI_Probe</a> and MPI_Iprobe operations
allow checking of incoming messages without actual receipt of them. The
user can then decide how to receive them, based on the information returned
by the probe (basically, the information returned by status). In particular,
the user may allocate memory for the receive buffer, according to the length
of the probed message. <p>
MPI_Iprobe(source, tag, comm, flag, status) returns
flag = true if there is a message that can be received and that matches
the pattern specified by the arguments source, tag, and comm. The call matches
the same message that would have been received by a call to <a href="../man3/MPI_Recv.3.php">MPI_Recv</a>(...,
source, tag, comm, status) executed at the same point in the program, and
returns in status the same value that would have been returned by <a href="../man3/MPI_Recv.3.php">MPI_Recv</a>().
Otherwise, the call returns flag = false, and leaves status undefined. <p>
If
MPI_Iprobe returns flag = true, then the content of the status object can
be subsequently accessed as described in Section 3.2.5 of the MPI-1 Standard,
"Return Status," to find the source, tag, and length of the probed message.
<p>
A subsequent receive executed with the same context, and the source and
tag returned in status by MPI_Iprobe will receive the message that was
matched by the probe if no other intervening receive occurs after the probe.
If the receiving process is multithreaded, it is the user&rsquo;s responsibility
to ensure that the last condition holds. <p>
The source argument of <a href="../man3/MPI_Probe.3.php">MPI_Probe</a>
can be MPI_ANY_SOURCE, and the tag argument can be MPI_ANY_TAG, so that
one can probe for messages from an arbitrary source and/or with an arbitrary
tag. However, a specific communication context must be provided with the
comm argument. <p>
If your application does not need to examine the <i>status</i> field,
you can save resources by using the predefined constant MPI_STATUS_IGNORE
as a special value for the <i>status</i> argument. <p>
It is not necessary to receive
a message immediately after it has been probed for, and the same message
may be probed for several times before it is received. <p>

<h2><a name='sect8' href='#toc8'>Note</a></h2>
Users of libmpi-mt
should remember that two threads may do an MPI_Iprobe that actually returns
true for the same message for both threads.
<p>
<h2><a name='sect9' href='#toc9'>Errors</a></h2>
Almost all MPI routines
return an error value; C routines as the value of the function and Fortran
routines in the last argument. C++ functions do not return errors. If the
default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error
the C++ exception mechanism will be used to throw an MPI::Exception object.
<p>
Before the error value is returned, the current MPI error handler is called.
By default, this error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with <a href="../man3/MPI_Comm_set_errhandler.3.php">MPI_Comm_set_errhandler</a>; the
predefined error handler MPI_ERRORS_RETURN may be used to cause error values
to be returned. Note that MPI does not guarantee that an MPI program can
continue past an error.
<p>
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<p>
<a href="../man3/MPI_Probe.3.php">MPI_Probe</a> <br>

<p><a href="../man3/MPI_Cancel.3.php">MPI_Cancel</a>
<p> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Fortran 2008 Syntax</a></li>
<li><a name='toc5' href='#sect5'>Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Note</a></li>
<li><a name='toc9' href='#sect9'>Errors</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
