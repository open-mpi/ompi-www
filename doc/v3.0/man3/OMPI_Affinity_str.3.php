<?php
$topdir = "../../..";
$title = "OMPI_Affinity_str(3) man page (version 3.0.3)";
$meta_desc = "Open MPI v3.0.3 man page: OMPI_Affinity_str(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
     <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>OMPI_Affinity_str</b> - Obtain prettyprint strings of processor affinity

<p>information for this process
<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
#include &lt;mpi-ext.h&gt;
int OMPI_Affinity_str(ompi_affinity_fmt_type_t fmt_type,
                      char ompi_bound[OMPI_AFFINITY_STRING_MAX],
                      char current_binding[OMPI_AFFINITY_STRING_MAX],
                      char exists[OMPI_AFFINITY_STRING_MAX])
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
There is no Fortran binding for this function.
<h2><a name='sect4' href='#toc4'>Fortran 2008
Syntax</a></h2>
There is no Fortran 2008 binding for this function.
<h2><a name='sect5' href='#toc5'>Input Parameters</a></h2>

<dl>

<dt>fmt_type
</dt>
<dd>An enum indicating how to format the returned ompi_bound and current_binding
strings.  OMPI_AFFINITY_RSRC_STRING_FMT returns the string as human-readable
resource names, such as "socket 0, core 0".
<p> OMPI_AFFINITY_LAYOUT_FMT returns
ASCII art representing where this MPI process is bound relative to the
machine resource layout.  For example "[. B][. .]" shows the process that called
the routine is bound to socket 0, core 1 in a system with 2 sockets, each
containing 2 cores.
<p> See below for more output examples.
<p>  </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>ompi_bound
</dt>
<dd>A prettyprint string describing what processor(s) Open MPI bound this process
to, or a string indicating that Open MPI did not bind this process.  </dd>

<dt>current_binding
</dt>
<dd>A prettyprint string describing what processor(s) this process is currently
bound to, or a string indicating that the process is bound to all available
processors (and is therefore considered "unbound").  </dd>

<dt>exists </dt>
<dd>A prettyprint
string describing the available sockets and sockets on this host.
<p> </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
Open
MPI may bind a process to specific sockets and/or cores at process launch
time.  This non-standard Open MPI function call returns prettyprint information
about three things:
<dl>

<dt>Where Open MPI bound this process. </dt>
<dd>The string returned
in <b></b> ompi_bound will either indicate that Open MPI did not bind this process
to anything, or it will contain a prettyprint description of the processor(s)
to which Open MPI bound this process.  </dd>

<dt>Where this process is currently bound.
</dt>
<dd>Regardless of whether Open MPI bound this process or not, another entity
may have bound it.  The string returned in <b>current_binding</b> will indicate
what the <i></i> current binding is of this process, regardless of what Open MPI
may have done earlier.  The string returned will either indicate that the
process is unbound (meaning that it is bound to all available processors)
or it will contain a prettyprint description of the sockets and cores to
which the process is currently bound.  </dd>

<dt>What processors exist. </dt>
<dd>As a convenience
to the user, the <b></b> exists string will contain a prettyprint description
of the sockets and cores that this process can see (which is <i>usually</i> all
processors in the system).
<p> </dd>
</dl>

<h2><a name='sect8' href='#toc8'>Examples</a></h2>
<b>Example 1:</b>  Print out processes binding
using resource string format. <p>
<br>
<pre>    int rank;
    char ompi_bound[OMPI_AFFINITY_STRING_MAX];
    char current_binding[OMPI_AFFINITY_STRING_MAX];
    char exists[OMPI_AFFINITY_STRING_MAX];
    <a href="../man3/MPI_Init.3.php">MPI_Init</a>(&amp;argc, &amp;argv);
    <a href="../man3/MPI_Comm_rank.3.php">MPI_Comm_rank</a>(MPI_COMM_WORLD, &amp;rank);
    OMPI_Affinity_str(OMPI_AFFINITY_RSRC_STRING_FMT,
                      ompi_bound, current_binding, exists);
    printf("rank %d: \n"
           "       ompi_bound: %s\n"
           "  current_binding: %s\n"
           "           exists: %s\n",
           rank, ompi_bound, current_binding, exists);
    ...
</pre><p>
Output of mpirun -np 2 -bind-to-core a.out: <br>
<pre>rank 0:
       ompi_bound: socket 0[core 0]
  current_binding: socket 0[core 0]
           exists: socket 0 has 4 cores
rank 1:
       ompi_bound: socket 0[core 1]
  current_binding: socket 0[core 1]
           exists: socket 0 has 4 cores
</pre><p>
Output of mpirun -np 2 -bind-to-socket a.out: <br>
<pre>rank 0:
       ompi_bound: socket 0[core 0-3]
  current_binding: Not bound (or bound to all available processors)
           exists: socket 0 has 4 cores
rank 1:
       ompi_bound: socket 0[core 0-3]
  current_binding: Not bound (or bound to all available processors)
           exists: socket 0 has 4 cores
</pre><p>
<br>
<b>Example 2:</b>  Print out processes binding using layout string format. <p>
<br>
<pre>    int rank;
    char ompi_bound[OMPI_AFFINITY_STRING_MAX];
    char current_binding[OMPI_AFFINITY_STRING_MAX];
    char exists[OMPI_AFFINITY_STRING_MAX];
    <a href="../man3/MPI_Init.3.php">MPI_Init</a>(&amp;argc, &amp;argv);
    <a href="../man3/MPI_Comm_rank.3.php">MPI_Comm_rank</a>(MPI_COMM_WORLD, &amp;rank);
    OMPI_Affinity_str(OMPI_AFFINITY_LAYOUT_FMT,
                      ompi_bound, current_binding, exists);
    printf("rank %d: \n"
           "       ompi_bound: %s\n"
           "  current_binding: %s\n"
           "           exists: %s\n",
           rank, ompi_bound, current_binding, exists);
    ...
</pre><p>
Output of mpirun -np 2 -bind-to-core a.out: <br>
<pre>rank 0:
       ompi_bound: [B . . .]
  current_binding: [B . . .]
           exists: [. . . .]
rank 1:
       ompi_bound: [. B . .]
  current_binding: [. B . .]
           exists: [. . . .]
</pre><p>
Output of mpirun -np 2 -bind-to-socket a.out: <br>
<pre>rank 0:
       ompi_bound: [B B B B]
  current_binding: [B B B B]
           exists: [. . . .]
rank 1:
       ompi_bound: [B B B B]
  current_binding: [B B B B]
           exists: [. . . .]
</pre>
<p>
<h2><a name='sect9' href='#toc9'>See Also</a></h2>
<br>
<pre>mpirun(1)
</pre><p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Fortran 2008 Syntax</a></li>
<li><a name='toc5' href='#sect5'>Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Examples</a></li>
<li><a name='toc9' href='#sect9'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
