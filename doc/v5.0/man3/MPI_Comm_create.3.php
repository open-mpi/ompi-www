<?php
$topdir = "../../..";
$title = "MPI_Comm_create(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_COMM_CREATE(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Comm_createR] - Creates a new communicator.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Comm_create(MPI_Comm comm, MPI_Group group, MPI_Comm
*newcomm)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CREATE(COMM,
GROUP, NEWCOMM, IERROR)    INTEGER COMM, GROUP, NEWCOMM, IERRORR]Fortran
2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Comm_create(comm, group, newcomm, ierror)    TYPE(MPI_Comm),
INTENT(IN) :: comm    TYPE(MPI_Group), INTENT(IN) :: group    TYPE(MPI_Comm),
INTENT(OUT) :: newcomm    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input
Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]commR] : Communicator (handle). </dd>

<dt>[bu]</dt>
<dd>C]groupR] : Group, which
is a subset of the group of comm (handle). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]newcommR]
: New communicator (handle). </dd>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran only: Error status
(integer). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<p>
This function creates a new communicator C]newcommR]
with communication C]groupR] defined by C]groupR] and a new context. The
function sets C]newcommR] to a new communicator that spans all the processes
that are in the C]groupR]. It sets C]newcommR] to C]MPI_COMM_NULLR] for
processes that are not in the C]groupR]. Each process must call with a C]groupR]
argument that is a subgroup of the C]groupR] associated with C]commR];
this could be C]MPI_GROUP_EMPTYR]. The processes may specify different values
for the C]groupR] argument. If a process calls with a non-empty C]groupR],
then all processes in that C]groupR] must call the function with the same
C]groupR] as argument, that is: the same processes in the same order. Otherwise
the call is erroneous.
<h2><a name='sect8' href='#toc8'>Notes</a></h2>
<p>
C]MPI_Comm_createR] provides a means of making
a subset of processes for the purpose of separate MIMD computation, with
separate communication space. C]newcommR], which is created by C]MPI_Comm_createR],
can be used in subsequent calls to C]MPI_Comm_createR] (or other communicator
constructors) to further subdivide a computation into parallel sub-computations.
A more general service is provided by C]MPI_Comm_splitR].
<h2><a name='sect9' href='#toc9'>Errors</a></h2>
<p>
Almost all
MPI routines return an error value; C routines as the value of the function
and Fortran routines in the last argument. Before the error value is returned,
the current MPI error handler is called. By default, this error handler
aborts the MPI job, except for I/O function errors. The error handler may
be changed with C]MPI_Comm_set_errhandlerR]; the predefined error handler
C]MPI_ERRORS_RETURNR] may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<p>
C]MPI_Comm_splitR](3) C]MPI_Intercomm_createR](3) C]MPI_Comm_create_groupR](3)
<p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Comm_create(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CREATE(COMM, GROUP, NEWCOMM, IERROR)    INTEGER COMM, GROUP, NEWCOMM, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Comm_create(comm, group, newcomm, ierror)    TYPE(MPI_Comm), INTENT(IN) :: comm    TYPE(MPI_Group), INTENT(IN) :: group    TYPE(MPI_Comm), INTENT(OUT) :: newcomm    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameter</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Notes</a></li>
<li><a name='toc9' href='#sect9'>Errors</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
