<?php
$topdir = "../../..";
$title = "MPI_Cart_create(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_CART_CREATE(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Cart_createR] - Makes a new communicator to which Cartesian
topology information has been attached.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Cart_create(MPI_Comm comm_old, int ndims, const
int dims[],    const int periods[], int reorder, MPI_Comm *comm_cart)R]Fortran
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_CART_CREATE(COMM_OLD,
NDIMS, DIMS, PERIODS, REORDER,        COMM_CART, IERROR)    INTEGER COMM_OLD,
NDIMS, DIMS(*), COMM_CART, IERROR    LOGICAL PERIODS(*), REORDERR]Fortran
2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Cart_create(comm_old, ndims, dims, periods, reorder, comm_cart,
ierror)    TYPE(MPI_Comm), INTENT(IN) :: comm_old    INTEGER, INTENT(IN)
:: ndims, <i><i>dims(ndims)</i></i>    LOGICAL, INTENT(IN) :: <i>periods(ndims)</i>, reorder
   TYPE(MPI_Comm), INTENT(OUT) :: comm_cart    INTEGER, OPTIONAL, INTENT(OUT)
:: ierrorR]Input Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]comm_oldR] : Input communicator (handle).
</dd>

<dt>[bu]</dt>
<dd>C]ndimsR] : Number of dimensions of Cartesian grid (integer). </dd>

<dt>[bu]</dt>
<dd>C]dimsR]
: Integer array of size ndims specifying the number of processes in each
dimension. </dd>

<dt>[bu]</dt>
<dd>C]periodsR] : Logical array of size ndims specifying whether
the grid is periodic (true) or not (false) in each dimension. </dd>

<dt>[bu]</dt>
<dd>C]reorderR]
: Ranking may be reordered (true) or not (false) (logical). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]comm_cartR]
: Communicator with new Cartesian topology (handle). </dd>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran
only: Error status (integer). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<p>
C]MPI_Cart_createR] returns a handle
to a new communicator to which the Cartesian topology information is attached.
If C]reorderR] = false then the rank of each process in the new group is
identical to its rank in the old group. Otherwise, the function may C]reorderR]
the processes (possibly so as to choose a good embedding of the virtual
topology onto the physical machine). If the total size of the Cartesian
grid is smaller than the size of the group of comm, then some processes
are returned C]MPI_COMM_NULLR], in analogy to C]MPI_Comm_splitR]. The call
is erroneous if it specifies a grid that is larger than the group size.

<h2><a name='sect8' href='#toc8'>Errors</a></h2>
<p>
Almost all MPI routines return an error value; C routines as the
value of the function and Fortran routines in the last argument. Before
the error value is returned, the current MPI error handler is called. By
default, this error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with C]MPI_Comm_set_errhandlerR];
the predefined error handler C]MPI_ERRORS_RETURNR] may be used to cause
error values to be returned. Note that MPI does not guarantee that an MPI
program can continue past an error. <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Cart_create(MPI_Comm comm_old, int ndims, const int dims[],    const int periods[], int reorder, MPI_Comm *comm_cart)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_CART_CREATE(COMM_OLD, NDIMS, DIMS, PERIODS, REORDER,        COMM_CART, IERROR)    INTEGER COMM_OLD, NDIMS, DIMS(*), COMM_CART, IERROR    LOGICAL PERIODS(*), REORDERR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Cart_create(comm_old, ndims, dims, periods, reorder, comm_cart, ierror)    TYPE(MPI_Comm), INTENT(IN) :: comm_old    INTEGER, INTENT(IN) :: ndims, dims(ndims)    LOGICAL, INTENT(IN) :: periods(ndims), reorder    TYPE(MPI_Comm), INTENT(OUT) :: comm_cart    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
