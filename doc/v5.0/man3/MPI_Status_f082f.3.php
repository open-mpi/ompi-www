<?php
$topdir = "../../..";
$title = "MPI_Status_f082f(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_STATUS_F082F(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
MPI_Status_f082f, <a href="../man3/MPI_Status_c2f08.3.php">MPI_Status_c2f08</a> - Translates a Fortran 2008 status
into a Fortran INTEGER-style status, or vice versa.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Status_f082f(const MPI_F08_status *f08_status, MPI_Fint
*f_status)int <a href="../man3/MPI_Status_f2f08.3.php">MPI_Status_f2f08</a>(const MPI_Fint *f_status, MPI_F08_status
*f08_status)R]Fortran mpi Module Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPIMPI_STATUS_F082F(F08_STATUS, F_STATUS, IERROR)    TYPE(MPI_Status)
:: F08_STATUS    INTEGER :: STATUS(MPI_STATUS_SIZE), IERRORMPI_STATUS_F2F08(F_STATUS,
F08_STATUS, IERROR)    INTEGER :: F_STATUS(MPI_STATUS_SIZE), IERROR
TYPE(MPI_Status) :: F08_STATUSR]Fortran mpi_f08 Module Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Status_f082f(f08_status, f_status, ierror)    TYPE(MPI_Status),
INTENT(IN) :: f08_status    INTEGER, INTENT(OUT) :: f_status(MPI_STATUS_SIZE)
   INTEGER, OPTIONAL, INTENT(OUT) :: ierrorMPI_Status_f2f08(f_status, f08_status,
ierror)    INTEGER, INTENT(IN) :: f_status(MPI_STATUS_SIZE)    TYPE(MPI_Status),
INTENT(OUT) :: f08_status    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]f08_statusR]:
C]mpi_f08R]-style MPI status object </dd>

<dt>[bu]</dt>
<dd>C]f_statusR]: C]mpiR]-style C]INTEGERR]
MPI status object </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Description</a></h2>
<p>
These two procedures are provided to convert
from a Fortran 2008 status (which is a derived datatype made of integers)
to a Fortran status (which is an array of integers), and vice versa. The
conversion occurs on all the information in C]statusR], including that
which is hidden. That is, no status information is lost in the conversion.
<p>
When using C]MPI_Status_f082f()R], if C]f08_statusR] is a valid Fortran
status, but not the Fortran value of C]MPI_F08_STATUS_IGNORER] (in C),
C]MPI_STATUS_IGNORER] (in Fortran) or C]MPI_F08_STATUSES_IGNORER] (in C)
or C]MPI_STATUSES_IGNORER] (in Fortran), then C]MPI_Status_f082f()R] returns
in C]f_statusR] a valid array with the same content. If C]f08_statusR] is
the C value of C]MPI_F08_STATUS_IGNORER] or C]MPI_F08_STATUSES_IGNORER]
or the Fortran value of C]MPI_STATUS_IGNORER] or C]MPI_STATUSES_IGNORER],
or if C]f08_statusR] is not a valid Fortran status, then the call is erroneous.
<p>
When using C]<a href="../man3/MPI_Status_f2f08.3.php">MPI_Status_f2f08</a>()R], the opposite conversion is applied. If
C]f_statusR] is C]MPI_STATUS_IGNORER] or C]MPI_STATUSES_IGNORER], or if
C]f_statusR] is not a valid Fortran status, then the call is erroneous.
<p>
The input status has the same source, tag and error code values as the
output status, and returns the same answers when queried for count, elements,
and cancellation. The conversion function may be called with an input status
argument that has an undefined error field, in which case the value of
the error field in the output status argument is undefined.
<h2><a name='sect7' href='#toc7'>Notes</a></h2>
<p>
The Fortran
subroutines for these MPI routines are only available in the C]mpiR] and
C]mpi_f08R] modules (including the type specification for C]TYPE(MPI_Status);
they are (intentionally) not available inR]mpif.h[ga].
<h2><a name='sect8' href='#toc8'>See Also</a></h2>
<p>
C]MPI_Status_c2fR](3),
C]MPI_Status_f2cR](3), C]MPI_Status_f082cR](3), C]MPI_Status_c2f08R](3)
<p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Status_f082f(const MPI_F08_status *f08_status, MPI_Fint *f_status)int <a href="../man3/MPI_Status_f2f08.3.php">MPI_Status_f2f08</a>(const MPI_Fint *f_status, MPI_F08_status *f08_status)R]Fortran mpi Module Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPIMPI_STATUS_F082F(F08_STATUS, F_STATUS, IERROR)    TYPE(MPI_Status) :: F08_STATUS    INTEGER :: STATUS(MPI_STATUS_SIZE), IERRORMPI_STATUS_F2F08(F_STATUS, F08_STATUS, IERROR)    INTEGER :: F_STATUS(MPI_STATUS_SIZE), IERROR    TYPE(MPI_Status) :: F08_STATUSR]Fortran mpi_f08 Module Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Status_f082f(f08_status, f_status, ierror)    TYPE(MPI_Status), INTENT(IN) :: f08_status    INTEGER, INTENT(OUT) :: f_status(MPI_STATUS_SIZE)    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorMPI_Status_f2f08(f_status, f08_status, ierror)    INTEGER, INTENT(IN) :: f_status(MPI_STATUS_SIZE)    TYPE(MPI_Status), INTENT(OUT) :: f08_status    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Parameters</a></li>
<li><a name='toc6' href='#sect6'>Description</a></li>
<li><a name='toc7' href='#sect7'>Notes</a></li>
<li><a name='toc8' href='#sect8'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
