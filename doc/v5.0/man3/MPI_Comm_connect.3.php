<?php
$topdir = "../../..";
$title = "MPI_Comm_connect(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_COMM_CONNECT(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Comm_connectR] - Establishes communication with a server.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Comm_connect(const char *port_name, MPI_Info info,
int root,    MPI_Comm comm, MPI_Comm *newcomm)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CONNECT(PORT_NAME,
INFO, ROOT, COMM, NEWCOMM, IERROR)    CHARACTER*(*)   PORT_NAME    INTEGER
    INFO, ROOT, COMM, NEWCOMM, IERRORR]Fortran 2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Comm_connect(port_name, info, root, comm, newcomm, ierror)
   CHARACTER(LEN=*), INTENT(IN) :: port_name    TYPE(MPI_Info), INTENT(IN)
:: info    INTEGER, INTENT(IN) :: root    TYPE(MPI_Comm), INTENT(IN) ::
comm    TYPE(MPI_Comm), INTENT(OUT) :: newcomm    INTEGER, OPTIONAL, INTENT(OUT)
:: ierrorR]Input Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]port_nameR] : Port name (string, used
only on I]rootR]). </dd>

<dt>[bu]</dt>
<dd>C]infoR] : Options given by root for the connect
(handle, used only on root). No options currently supported. </dd>

<dt>[bu]</dt>
<dd>C]rootR]
: Rank in I]commR] of root node (integer). </dd>

<dt>[bu]</dt>
<dd>C]commR] : Intracommunicator
over which call is collective (handle). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]newcommR]
: Intercommunicator with client as remote group (handle) </dd>

<dt>[bu]</dt>
<dd>C]IERRORR]
: Fortran only: Error status (integer). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<p>
C]MPI_Comm_connectR]
establishes communication with a server specified by C]port_nameR]. It is
collective over the calling communicator and returns an intercommunicator
in which the remote group participated in an C]MPI_Comm_acceptR]. The C]MPI_Comm_connectR]
call must only be called after the C]MPI_Comm_acceptR] call has been made
by the MPI job acting as the server. If the named port does not exist (or
has been closed), C]MPI_Comm_connectR] raises an error of class C]MPI_ERR_PORTR].
MPI provides no guarantee of fairness in servicing connection attempts.
That is, connection attempts are not necessarily satisfied in the order
in which they were initiated, and competition from other connection attempts
may prevent a particular connection attempt from being satisfied. The C]port_nameR]
parameter is the address of the server. It must be the same as the name
returned by C]MPI_Open_portR] on the server.
<h2><a name='sect8' href='#toc8'>Errors</a></h2>
<p>
Almost all MPI routines
return an error value; C routines as the value of the function and Fortran
routines in the last argument. Before the error value is returned, the current
MPI error handler is called. By default, this error handler aborts the MPI
job, except for I/O function errors. The error handler may be changed with
C]MPI_Comm_set_errhandlerR]; the predefined error handler C]MPI_ERRORS_RETURNR]
may be used to cause error values to be returned. Note that MPI does not
guarantee that an MPI program can continue past an error. See the MPI man
page for a full list of MPI error codes.
<h2><a name='sect9' href='#toc9'>See Also</a></h2>
<p>
C]MPI_Comm_acceptR](3)
C]MPI_Open_portR](3) <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Comm_connect(const char *port_name, MPI_Info info, int root,    MPI_Comm comm, MPI_Comm *newcomm)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CONNECT(PORT_NAME, INFO, ROOT, COMM, NEWCOMM, IERROR)    CHARACTER*(*)   PORT_NAME    INTEGER     INFO, ROOT, COMM, NEWCOMM, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Comm_connect(port_name, info, root, comm, newcomm, ierror)    CHARACTER(LEN=*), INTENT(IN) :: port_name    TYPE(MPI_Info), INTENT(IN) :: info    INTEGER, INTENT(IN) :: root    TYPE(MPI_Comm), INTENT(IN) :: comm    TYPE(MPI_Comm), INTENT(OUT) :: newcomm    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
<li><a name='toc9' href='#sect9'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
