<?php
$topdir = "../../..";
$title = "MPI_Comm_create_errhandler(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_COMM_CREATE_ERRHANDLER(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Comm_create_errhandlerR] - Creates an error handler that can
be attached to communicators.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Comm_create_errhandler(MPI_Comm_errhandler_function
*function,    MPI_Errhandler *errhandler)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CREATE_ERRHANDLER(FUNCTION,
ERRHANDLER, IERROR)    EXTERNAL    FUNCTION    INTEGER ERRHANDLER, IERRORR]Fortran
2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Comm_create_errhandler(comm_errhandler_fn, errhandler,
ierror)    PROCEDURE(MPI_Comm_errhandler_function) :: comm_errhandler_fn
   TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler    INTEGER, OPTIONAL,
INTENT(OUT) :: ierrorR]Deprecated Type Name Note</a></h2>
<p>
MPI-2.2 deprecated the C]MPI_Comm_errhandler_fnR]

<dl>

<dt>and </dt>
<dd>C]MPI::Comm::Errhandler_fnR] types in favor of C]MPI_Comm_errhandler_functionR]
and C]MPI::Comm::Errhandler_functionR], respectively. Open MPI supports
both names (indeed, the _fn names are typedefs to the _function names).
</dd>
</dl>

<h2><a name='sect6' href='#toc6'>Input Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]functionR] : User-defined error handling procedure
(function). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Output Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]errhandlerR] : MPI error handler (handle).
</dd>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran only: Error status (integer). </dd>
</dl>

<h2><a name='sect8' href='#toc8'>Description</a></h2>
<p>
C]MPI_Comm_create_errhandlerR]
creates an error handler that can be attached to communicators. This C]functionR]
is identical to C]MPI_Errhandler_createR], the use of which is deprecated.
In C, the user routine should be a C]functionR] of type C]MPI_Comm_errhandler_functionR],
which is defined as <br>
<pre>

</pre><p>

<dl>

<dt>C]typedef void MPI_Comm_errhandler_function(MPI_Comm *, int *, ...);R]The
first argument is the communicator in use. </dt>
<dd>The second is the error code
to be returned by the MPI routine that raised the error. This typedef replaces
C]MPI_Handler_functionR], the use of which is deprecated. In Fortran, the
user routine should be of this form: <br>
<pre>

</pre></dd>
</dl>

<h2><a name='sect9' href='#toc9'>C]SUBROUTINE COMM_ERRHANDLER_FUNCTION(COMM, ERROR_CODE, ...)   INTEGER COMM,
ERROR_CODER]Errors</a></h2>
<p>
Almost all MPI routines return an error value;
<dl>

<dt>C routines
as the value </dt>
<dd>of the C]functionR] and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is called.
By default, this error handler aborts the MPI job, except for I/O C]functionR]
errors. The error handler may be changed with C]MPI_Comm_set_errhandlerR];
the predefined error handler C]MPI_ERRORS_RETURNR] may be used to cause
error values to be returned. Note that MPI does not guarantee that an MPI
program can continue past an error. </dd>
</dl>
<p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Comm_create_errhandler(MPI_Comm_errhandler_function *function,    MPI_Errhandler *errhandler)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_COMM_CREATE_ERRHANDLER(FUNCTION, ERRHANDLER, IERROR)    EXTERNAL    FUNCTION    INTEGER ERRHANDLER, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Comm_create_errhandler(comm_errhandler_fn, errhandler, ierror)    PROCEDURE(MPI_Comm_errhandler_function) :: comm_errhandler_fn    TYPE(MPI_Errhandler), INTENT(OUT) :: errhandler    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Deprecated Type Name Note</a></li>
<li><a name='toc6' href='#sect6'>Input Parameter</a></li>
<li><a name='toc7' href='#sect7'>Output Parameters</a></li>
<li><a name='toc8' href='#sect8'>Description</a></li>
<li><a name='toc9' href='#sect9'>C]SUBROUTINE COMM_ERRHANDLER_FUNCTION(COMM, ERROR_CODE, ...)   INTEGER COMM, ERROR_CODER]Errors</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
