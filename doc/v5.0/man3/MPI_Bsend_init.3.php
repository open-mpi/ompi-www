<?php
$topdir = "../../..";
$title = "MPI_Bsend_init(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_BSEND_INIT(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Bsend_initR] - Builds a handle for a buffered send.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Bsend_init(const void *buf, int count, MPI_Datatype
datatype,    int dest, int tag, MPI_Comm comm, MPI_Request *request)R]Fortran
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_BSEND_INIT(BUF,
COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)    &lt;type&gt;  BUF(*)    INTEGER
COUNT, DATATYPE, DEST, TAG,    INTEGER COMM, REQUEST, IERRORR]Fortran 2008
Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Bsend_init(buf, count, datatype, dest, tag, comm, request,
ierror)    TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf    INTEGER,
INTENT(IN) :: count, dest, tag    TYPE(MPI_Datatype), INTENT(IN) :: datatype
   TYPE(MPI_Comm), INTENT(IN) :: comm    TYPE(MPI_Request), INTENT(OUT)
:: request    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]bufR]
: Initial address of send buffer (choice). </dd>

<dt>[bu]</dt>
<dd>C]countR] : Number of elements
sent (integer). </dd>

<dt>[bu]</dt>
<dd>C]datatypeR] : Type of each element (handle). </dd>

<dt>[bu]</dt>
<dd>C]destR]
: Rank of destination (integer). </dd>

<dt>[bu]</dt>
<dd>C]tagR] : Message tag (integer). </dd>

<dt>[bu]</dt>
<dd>C]commR]
: Communicator (handle). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]requestR] : Communication
request (handle). </dd>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran only: Error status (integer).
</dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<p>
Creates a persistent communication C]requestR] for a buffered
mode send, and binds to it all the arguments of a send operation. <p>
A communication
(send or receive) that uses a persistent C]requestR] is initiated by the
function C]MPI_StartR].
<h2><a name='sect8' href='#toc8'>Errors</a></h2>
<p>
Almost all MPI routines return an error value;
C routines as the value of the function and Fortran routines in the last
argument. <p>
Before the error value is returned, the current MPI error handler
is called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with C]MPI_Comm_set_errhandlerR];
the predefined error handler C]MPI_ERRORS_RETURNR] may be used to cause
error values to be returned. Note that MPI does not guarantee that an MPI
program can continue past an error.
<h2><a name='sect9' href='#toc9'>See Also</a></h2>
<p>
<i><a href="../man3/MPI_Send_init.3.php">MPI_Send_init</a>(3)</i> <i><a href="../man3/MPI_Ssend_init.3.php">MPI_Ssend_init</a>(3)</i>
<i><a href="../man3/MPI_Rsend_init.3.php">MPI_Rsend_init</a>(3)</i> <i><a href="../man3/MPI_Recv_init.3.php">MPI_Recv_init</a>(3)</i> <i><a href="../man3/MPI_Start.3.php">MPI_Start</a>(3)</i> <i><a href="../man3/MPI_Startall.3.php">MPI_Startall</a>(3)</i> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Bsend_init(const void *buf, int count, MPI_Datatype datatype,    int dest, int tag, MPI_Comm comm, MPI_Request *request)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_BSEND_INIT(BUF, COUNT, DATATYPE, DEST, TAG, COMM, REQUEST, IERROR)    <type>  BUF(*)    INTEGER COUNT, DATATYPE, DEST, TAG,    INTEGER COMM, REQUEST, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Bsend_init(buf, count, datatype, dest, tag, comm, request, ierror)    TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf    INTEGER, INTENT(IN) :: count, dest, tag    TYPE(MPI_Datatype), INTENT(IN) :: datatype    TYPE(MPI_Comm), INTENT(IN) :: comm    TYPE(MPI_Request), INTENT(OUT) :: request    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
<li><a name='toc9' href='#sect9'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
