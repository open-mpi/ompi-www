<?php
$topdir = "../../..";
$title = "MPI_Finalized(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_FINALIZED(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_FinalizedR] - Checks whether MPI has been finalized
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Finalized(int *flag)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_FINALIZED(FLAG,
IERROR)    LOGICAL FLAG    INTEGER IERRORR]Fortran 2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Finalized(flag, ierror)    LOGICAL, INTENT(OUT) :: flag
   INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Output Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]flagR]
: True if MPI was finalized, and false otherwise (logical). </dd>

<dt>[bu]</dt>
<dd>C]IERRORR]
: Fortran only: Error status (integer). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Description</a></h2>
<p>
This routine may be used
to determine whether MPI has been finalized. It is one of a small number
of routines that may be called before MPI is initialized and after MPI
has been finalized (C]MPI_InitializedR] is another).
<h2><a name='sect7' href='#toc7'>Errors</a></h2>
<p>
Almost all MPI
routines return an error value; C routines as the value of the function
and Fortran routines in the last argument. Before the error value is returned,
the current MPI error handler is called. By default, this error handler
aborts the MPI job, except for I/O function errors. The error handler may
be changed with C]MPI_Comm_set_errhandlerR]; the predefined error handler
C]MPI_ERRORS_RETURNR] may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
<h2><a name='sect8' href='#toc8'>See Also</a></h2>
<p>
C]MPI_InitR](3) C]MPI_Init_threadR](3) C]MPI_InitializedR](3)
C]MPI_FinalizeR](3) <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Finalized(int *flag)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_FINALIZED(FLAG, IERROR)    LOGICAL FLAG    INTEGER IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Finalized(flag, ierror)    LOGICAL, INTENT(OUT) :: flag    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Output Parameter</a></li>
<li><a name='toc6' href='#sect6'>Description</a></li>
<li><a name='toc7' href='#sect7'>Errors</a></li>
<li><a name='toc8' href='#sect8'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
