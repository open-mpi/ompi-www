<?php
$topdir = "../../..";
$title = "MPI_File_write_ordered_begin(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_FILE_WRITE_ORDERED_BEGIN(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_File_write_ordered_beginR] - Writes a file at a location specified
by a shared file pointer; beginning part of a split collective routine
(nonblocking).
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_File_write_ordered_begin(MPI_File fh, const void
*buf,    int count, MPI_Datatype datatype)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_FILE_WRITE_ORDERED_BEGIN(FH,
BUF, COUNT, DATATYPE, IERROR)    &lt;type&gt;  BUF(*)    INTEGER FH, COUNT, DATATYPE,
IERRORR]Fortran 2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_File_write_ordered_begin(fh, buf, count, datatype, ierror)
   TYPE(MPI_File), INTENT(IN) :: fh    TYPE(*), DIMENSION(..), INTENT(IN),
ASYNCHRONOUS :: buf    INTEGER, INTENT(IN) :: count    TYPE(MPI_Datatype),
INTENT(IN) :: datatype    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input/Output
Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]fhR] : File handle (handle). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Input Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]bufR]
: Initial address of buffer (choice). </dd>

<dt>[bu]</dt>
<dd>C]countR] : Number of elements
in buffer (integer). </dd>

<dt>[bu]</dt>
<dd>C]datatypeR] : Data type of each buffer element
(handle). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Output Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran only: Error status (integer).
</dd>
</dl>

<h2><a name='sect8' href='#toc8'>Description</a></h2>
<p>
C]MPI_File_write_ordered_beginR] is the beginning part of a
split collective, nonblocking routine that must be called by all processes
in the communicator group associated with the file handle C]fhR]. Each process
may pass different argument values for the C]datatypeR] and C]countR] arguments.
After all processes of the group have issued their respective calls, each
process attempts to write, into the file associated with C]fhR], a total
number of C]countR] data items having C]datatypeR] type contained in the
user[cq]s buffer C]bufR]. For each process, the location in the file at
which data is written is the position at which the shared file pointer
would be after all processes whose ranks within the group are less than
that of this process had written their data.
<h2><a name='sect9' href='#toc9'>Notes</a></h2>
<p>
All the nonblocking collective
routines for data access are [lq]split[rq] into two routines, each with
_begin or _end as a suffix. These split collective routines are subject
to the semantic rules described in Section 9.4.5 of the MPI-2 standard.
<h2><a name='sect10' href='#toc10'>Errors</a></h2>
<p>
Almost
all MPI routines return an error value; C routines as the value of the
function and Fortran routines in the last argument. <p>
Before the error value
is returned, the current MPI error handler is called. For MPI I/O function
errors, the default error handler is set to C]MPI_ERRORS_RETURNR]. The error
handler may be changed with C]MPI_File_set_errhandlerR]; the predefined
error handler C]MPI_ERRORS_ARE_FATALR] may be used to make I/O errors fatal.
Note that MPI does not guarantee that an MPI program can continue past
an error. <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_File_write_ordered_begin(MPI_File fh, const void *buf,    int count, MPI_Datatype datatype)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_FILE_WRITE_ORDERED_BEGIN(FH, BUF, COUNT, DATATYPE, IERROR)    <type>  BUF(*)    INTEGER FH, COUNT, DATATYPE, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_File_write_ordered_begin(fh, buf, count, datatype, ierror)    TYPE(MPI_File), INTENT(IN) :: fh    TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: buf    INTEGER, INTENT(IN) :: count    TYPE(MPI_Datatype), INTENT(IN) :: datatype    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input/Output Parameter</a></li>
<li><a name='toc6' href='#sect6'>Input Parameters</a></li>
<li><a name='toc7' href='#sect7'>Output Parameter</a></li>
<li><a name='toc8' href='#sect8'>Description</a></li>
<li><a name='toc9' href='#sect9'>Notes</a></li>
<li><a name='toc10' href='#sect10'>Errors</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
