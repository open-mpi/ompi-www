<?php
$topdir = "../../..";
$title = "MPI_Get_version(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_GET_VERSION(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Get_versionR] - Returns the version of the standard corresponding
to the current implementation.
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Get_version(int *version, int *subversion)R]Fortran
Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_GET_VERSION(VERSION,
SUBVERSION, IERROR)    INTEGER VERSION, SUBVERSION, IERRORR]Fortran 2008
Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Get_version(version, subversion, ierror)    INTEGER, INTENT(OUT)
:: version, subversion    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Output
Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]versionR] : The major version number of the corresponding
standard (integer). </dd>

<dt>[bu]</dt>
<dd>C]subversionR] : The minor version number of the
corresponding standard (integer). </dd>

<dt>[bu]</dt>
<dd>C]IERRORR] : Fortran only: Error status
(integer). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Description</a></h2>
<p>
Since Open MPI is MPI 3.1 compliant, this function
will return a C]versionR] value of 3 and a subversion value of 1 for this
release.
<h2><a name='sect7' href='#toc7'>Note</a></h2>
<p>
C]MPI_Get_versionR] is one of the few functions that can be
called before C]MPI_InitR] and after C]MPI_FinalizeR].
<h2><a name='sect8' href='#toc8'>Errors</a></h2>
<p>
Almost all
MPI routines return an error value; C routines as the value of the function
and Fortran routines in the last argument. <p>
Before the error value is returned,
the current MPI error handler is called. By default, this error handler
aborts the MPI job, except for I/O function errors. The error handler may
be changed with C]MPI_Comm_set_errhandlerR]; the predefined error handler
C]MPI_ERRORS_RETURNR] may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error. <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Get_version(int *version, int *subversion)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_GET_VERSION(VERSION, SUBVERSION, IERROR)    INTEGER VERSION, SUBVERSION, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Get_version(version, subversion, ierror)    INTEGER, INTENT(OUT) :: version, subversion    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Output Parameters</a></li>
<li><a name='toc6' href='#sect6'>Description</a></li>
<li><a name='toc7' href='#sect7'>Note</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
