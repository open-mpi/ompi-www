<?php
$topdir = "../../..";
$title = "MPI_Buffer_attach(3) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: MPI_BUFFER_ATTACH(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
C]MPI_Buffer_attachR] - Attaches a user-defined buffer for sending.

<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h3><a name='sect2' href='#toc2'>C Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect3' href='#toc3'>C]#include &lt;mpi.h&gt;int MPI_Buffer_attach(void *buf, int size)R]Fortran Syntax</a></h3>
<br>
<pre>

</pre>
<h3><a name='sect4' href='#toc4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_BUFFER_ATTACH(BUF,
SIZE, IERROR)    &lt;type&gt;  BUF(*)    INTEGER SIZE, IERRORR]Fortran 2008 Syntax</a></h3>
<br>
<pre>

</pre>
<h2><a name='sect5' href='#toc5'>C]USE mpi_f08MPI_Buffer_attach(buffer, size, ierror)    TYPE(*), DIMENSION(..),
ASYNCHRONOUS :: buffer    INTEGER, INTENT(IN) :: size    INTEGER, OPTIONAL,
INTENT(OUT) :: ierrorR]Input Parameters</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]bufR] : Initial buffer address
(choice). </dd>

<dt>[bu]</dt>
<dd>C]sizeR] : Buffer size, in bytes (integer). </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameter</a></h2>

<dl>

<dt>[bu]</dt>
<dd>C]IERRORR]
: Fortran only: Error status (integer). </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<p>
Provides to MPI a buffer
in the user[cq]s memory to be used for buffering outgoing messages. The
buffer is used only by messages sent in buffered mode. Only one buffer can
be attached to a process at a time.
<h2><a name='sect8' href='#toc8'>Notes</a></h2>
<p>
The size given should be the sum
of the sizes of all outstanding Bsends that you intend to have, plus C]MPI_BSEND_OVERHEADR]
bytes for each Bsend that you do. For the purposes of calculating size,
you should use C]MPI_Pack_sizeR]. In other words, in the code <br>
<pre>

</pre><p>

<dl>

<dt>C]MPI_Buffer_attach( buf, size );<a href="../man3/MPI_Bsend.3.php">MPI_Bsend</a>( ..., count=20, datatype=type1,
... );//...<a href="../man3/MPI_Bsend.3.php">MPI_Bsend</a>( ..., count=40, datatype=type2, ... );R]the value of size in the
C]MPI_Buffer_attachR] call should be </dt>
<dd>greater than the value computed by
<br>
<pre>

</pre></dd>
</dl>
<p>

<dl>

<dt>C]<a href="../man3/MPI_Pack_size.3.php">MPI_Pack_size</a>( 20, type1, comm, &amp;s1 );<a href="../man3/MPI_Pack_size.3.php">MPI_Pack_size</a>( 40, type2, comm,
&amp;s2 );size = s1 + s2 + 2 * MPI_BSEND_OVERHEAD;R]C]MPI_BSEND_OVERHEADR] gives
the maximum amount of buffer space </dt>
<dd>that may be used by the Bsend routines.
This value is in mpi.h for C and mpif.h for Fortran. </dd>
</dl>

<h2><a name='sect9' href='#toc9'>Errors</a></h2>
<p>
Almost all MPI
routines return an error value; C routines as the value of the function
and Fortran routines in the last argument. <p>
Before the error value is returned,
the current MPI error handler is called. By default, this error handler
aborts the MPI job, except for I/O function errors. The error handler may
be changed with C]MPI_Comm_set_errhandlerR]; the predefined error handler
C]MPI_ERRORS_RETURNR] may be used to cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<p>
<i><a href="../man3/MPI_Buffer_detach.3.php">MPI_Buffer_detach</a>(3)</i> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<ul>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>C]#include <mpi.h>int MPI_Buffer_attach(void *buf, int size)R]Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>C]USE MPI! or the older form: INCLUDE [aq]mpif.h[aq]MPI_BUFFER_ATTACH(BUF, SIZE, IERROR)    <type>  BUF(*)    INTEGER SIZE, IERRORR]Fortran 2008 Syntax</a></li>
</ul>
<li><a name='toc5' href='#sect5'>C]USE mpi_f08MPI_Buffer_attach(buffer, size, ierror)    TYPE(*), DIMENSION(..), ASYNCHRONOUS :: buffer    INTEGER, INTENT(IN) :: size    INTEGER, OPTIONAL, INTENT(OUT) :: ierrorR]Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameter</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Notes</a></li>
<li><a name='toc9' href='#sect9'>Errors</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
