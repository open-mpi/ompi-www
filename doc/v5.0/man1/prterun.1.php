<?php
$topdir = "../../..";
$title = "prterun(1) man page (version 5.0.0rc1)";
$meta_desc = "Open MPI v5.0.0rc1 man page: prterun(1)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
  <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<p>
prterun - Execute serial and parallel jobs with the PMIx Reference
Runtime (PRTE).
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>
<p>
C]prterunR] does B]notR] require a running C]prteR]
Distributed Virtual Machine (DVM). It will start the C]prteR] DVM, run a
single job, and shutdown the DVM. <p>
Single Process Multiple Data (SPMD) Model:
<br>
<pre>

</pre><p>

<dl>

<dt>C]prterun [ options ] &lt;program&gt; [ &lt;args&gt; ]R]Multiple Instruction Multiple Data
(MIMD) Model: </dt>
<dd><br>
<pre>

</pre></dd>
</dl>
<p>

<dl>

<dt>C]prterun [ global_options ] [rs]        [ local_options1 ] &lt;program1&gt; [
&lt;args1&gt; ] : [rs]        [ local_options2 ] &lt;program2&gt; [ &lt;args2&gt; ] : [rs]
   ... : [rs]        [ local_optionsN ] &lt;programN&gt; [ &lt;argsN&gt; ]R]Note that in both
models, invoking C]prterunR] via an absolute </dt>
<dd>path name is equivalent to
specifying the C]--prefixR] option with a C]&lt;dir&gt;R] value equivalent to the
directory where C]prterunR] resides, minus its last subdirectory. For example:
<br>
<pre>

</pre></dd>
</dl>
<p>

<dl>

<dt>C]$ /usr/local/bin/prterun ...R]is equivalent to </dt>
<dd><br>
<pre>

</pre></dd>
</dl>

<h2><a name='sect2' href='#toc2'>C]$ prterun --prefix /usr/localR]Quick Summary</a></h2>
<p>
If you are simply looking for
how to run an application,
<dl>

<dt>you probably </dt>
<dd>want to use a command line of the
following form: <br>
<pre>

</pre></dd>
</dl>
<p>

<dl>

<dt>C]$ prterun [ -np X ] [ --hostfile &lt;filename&gt; ] &lt;program&gt;R]This will run C]XR]
copies of C]&lt;program&gt;R] in your current </dt>
<dd>run-time environment over the set
of hosts specified by C]&lt;filename&gt;R], scheduling (by default) in a round-robin
fashion by CPU slot. If running under a supported resource manager a hostfile
is usually not required unless the caller wishes to further restrict the
set of resources used for that job. </dd>
</dl>

<h2><a name='sect3' href='#toc3'>Options</a></h2>
<p>
This section includes many commonly
used options. There may be other options listed with C]prterun --helpR]. <p>
C]prterunR]
will send the name of the directory where it was invoked on the local node
to each of the remote nodes, and attempt to change to that directory. See
the [lq]Current Working Directory[rq] section below for further details.

<dl>

<dt>B]CB]&lt;program&gt;B]R] </dt>
<dd>The program executable. This is identified as the first
non-recognized argument to C]prterunR]. </dd>

<dt>B]CB]&lt;args&gt;B]R] </dt>
<dd>Pass these run-time
arguments to every new process. These must always be the last arguments
to C]prterunR] after the C]&lt;program&gt;R]. If an app context file is used, C]&lt;args&gt;R]
will be ignored. </dd>

<dt>B]CB]-h, --helpB]R] </dt>
<dd>Display help for this command </dd>

<dt>B]CB]-V,
--versionB]R] </dt>
<dd>Print version number. If no other arguments are given, this
will also cause C]prterunR] to exit. </dd>
</dl>
<p>
Since C]prterunR] combines both C]prteR]
and C]prunR] it accepts all of the command line arguments from both of
these tools. See <i>prte(1)</i> and <i>prun(1)</i> for details on the command line options.
See <i>prte-map(1)</i> for more details on mapping, ranking, and binding options.

<h2><a name='sect4' href='#toc4'>Description</a></h2>
<p>
One invocation of C]prterunR] starts the PRTE DVM (i.e., C]prteR]),
runs a single job (similar to C]prunR]), then terminates the DVM (similar
to C]ptermR]). If the application is single process multiple data (SPMD),
the application can be specified on the C]prterunR] command line. <p>
If the
application is multiple instruction multiple data (MIMD), comprising of
multiple programs, the set of programs and argument can be specified in
one of two ways: Extended Command Line Arguments, and Application Context.
<p>
An application context describes the MIMD program set including all arguments
in a separate file. This file essentially contains multiple C]prterunR]
command lines, less the command name itself. The ability to specify different
options for different instantiations of a program is another reason to
use an application context. <p>
Extended command line arguments allow for the
description of the application layout on the command line using colons
(C]:R]) to separate the specification of programs and arguments. Some options
are globally set across all specified programs (e.g.&nbsp;C]--hostfileR]), while
others are specific to a single program (e.g.&nbsp;C]--npR]).
<h2><a name='sect5' href='#toc5'>Return Value</a></h2>
<p>
See <i>prun(1)</i>
for details. <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>C]$ prterun --prefix /usr/localR]Quick Summary</a></li>
<li><a name='toc3' href='#sect3'>Options</a></li>
<li><a name='toc4' href='#sect4'>Description</a></li>
<li><a name='toc5' href='#sect5'>Return Value</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
