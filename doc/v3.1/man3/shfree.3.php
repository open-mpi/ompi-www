<?php
$topdir = "../../..";
$title = "shfree(3) man page (version 3.1.0)";
$meta_desc = "Open MPI v3.1.0 man page: shfree(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
    <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>

<p> <i><i>shmem_malloc</i>(3)</i>, <i><i>shmem_free</i>(3)</i>, <i><i>shmem_align</i>(3)</i>, <i><i>shmem_realloc</i>(3)</i>
<i><i>shmalloc</i>(3)</i>, <i><i>shfree</i>(3)</i>, <i><i>shmemalign</i>(3)</i>, <i><i>shrealloc</i>(3)</i> - Symmetric heap memory
management functions.
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>

<p> C or C++: <br>
<pre>#include &lt;mpp/shmem.h&gt;
void *shmem_malloc(size_t size);
void *shmalloc(size_t size);
void shmem_free(void *ptr);
void shfree(void *ptr);
void *shmem_realloc(void *ptr, size_t size);
void *shrealloc(void *ptr, size_t size);
void *shmem_align(size_t alignment, size_t size);
void *shmemalign(size_t alignment, size_t size);
extern long malloc_error;
</pre>
<h2><a name='sect2' href='#toc2'>Description</a></h2>

<p> The <b>shmem_malloc</b> function returns a pointer to a block of
at least size bytes suitably aligned for any use. This space is allocated
from the symmetric heap (in contrast to <i><i>malloc</i>(3C)</i>, which allocates from
the private heap). <p>
The <b>shmem_align</b> function allocates a block in the symmetric
heap that has a byte alignment specified by the alignment argument. <p>
The
<b>shmem_free</b> function causes the block to which ptr points to, to be deallocated,
that is, made available for further allocation. If ptr is a null pointer,
no action occurs; otherwise, if the argument does not match a pointer earlier
returned by a symmetric heap function, or if the space has already been
deallocated, malloc_error is set to indicate the error, and shfree returns.
<p>
The <b>shmem_realloc</b> function changes the size of the block to which ptr points
to, to the size (in bytes) specified by size. <p>
The contents of the block
are unchanged up to the lesser of the new and old sizes. If the new size
is larger, the value of the newly allocated portion of the block is indeterminate.
If ptr is a null pointer, the shrealloc function behaves like the shmalloc
function for the specified size. If size is 0 and ptr is not a null pointer,
the block to which it points to is freed. Otherwise, if ptr does not match
a pointer earlier returned by a symmetric heap function, or if the space
has already been deallocated, the malloc_error variable is set to indicate
the error, and shrealloc returns a null pointer. If the space cannot be
allocated, the block to which ptr points to is unchanged. <p>
The shmem_malloc,
shmem_free, and shmem_realloc functions are provided so that multiple PEs
in an application can allocate symmetric, remotely accessible memory blocks.
These memory blocks can then be used with (shmem) communication routines.
Each of these functions call the <i><i>shmem_barrier_all</i>(3)</i> function before returning;
this ensures that all PEs participate in the memory allocation, and that
the memory on other PEs can be used as soon as the local PE returns. <p>
The
user is responsible for calling these functions with identical argument(s)
on all PEs; if differing size arguments are used, subsequent calls may
not return the same symmetric heap address on all PEs. <p>

<h2><a name='sect3' href='#toc3'>Notes</a></h2>

<p> The total size
of the symmetric heap is determined at job startup. One can adjust the size
of the heap using the SHMEM_SYMMETRIC_HEAP_SIZE environment variable. See
the <i><i>intro_shmem</i>(3)</i> man page for futher details. The shmem_malloc, shmem_free,
and shmem_realloc functions differ from the private heap allocation functions
in that all PEs in an application must call them (a barrier is used to
ensure this). <p>

<h2><a name='sect4' href='#toc4'>Return Values</a></h2>

<p> The <b>shmem_malloc</b> function returns a pointer
to the allocated space (which should be identical on all PEs); otherwise,
it returns a null pointer (with malloc_error set). The <b>shmem_free</b> function
returns no value. The <b>shmem_realloc</b> function returns a pointer to the allocated
space (which may have moved); otherwise, it returns a null pointer (with
malloc_error set).
<h2><a name='sect5' href='#toc5'>See Also</a></h2>

<p> <i><i>intro_shmem</i>(3)</i>, <i><i>shmem_my_pe</i>(3I)</i>, <i><i>shmem_init</i>(3)</i>
 <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>Description</a></li>
<li><a name='toc3' href='#sect3'>Notes</a></li>
<li><a name='toc4' href='#sect4'>Return Values</a></li>
<li><a name='toc5' href='#sect5'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
