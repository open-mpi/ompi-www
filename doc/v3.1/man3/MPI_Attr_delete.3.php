<?php
$topdir = "../../..";
$title = "MPI_Attr_delete(3) man page (version 3.1.0)";
$meta_desc = "Open MPI v3.1.0 man page: MPI_ATTR_DELETE(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
     <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>MPI_Attr_delete</b> - Deletes attribute value associated with a key
-- use of this routine is deprecated.
<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
int MPI_Attr_delete(MPI_Comm comm, int keyval)
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
<br>
<pre>INCLUDE &rsquo;mpif.h&rsquo;
MPI_ATTR_DELETE(COMM, KEYVAL, IERROR)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER<tt> </tt>&nbsp;<tt> </tt>&nbsp;COMM, KEYVAL, IERROR
</pre>
<h2><a name='sect4' href='#toc4'>Input Parameters</a></h2>

<dl>

<dt>comm </dt>
<dd>Communicator to which attribute is attached (handle).
</dd>

<dt>keyval </dt>
<dd>The key value of the deleted attribute (integer).
<p> </dd>
</dl>

<h2><a name='sect5' href='#toc5'>Output Parameter</a></h2>

<dl>

<dt>IERROR
</dt>
<dd>Fortran only: Error status (integer).
<p> </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Description</a></h2>
Note that use of this
routine is <i>deprecated</i> as of MPI-2, and was <i>deleted</i> in MPI-3. Please use <a href="../man3/MPI_Comm_delete_attr.3.php">MPI_Comm_delete_attr</a>.
 This function does not have a C++ or mpi_f08 binding. <p>
Delete attribute
from cache by key. This function invokes the attribute delete function delete_fn
specified when the keyval was created. The call will fail if the delete_fn
function returns an error code other than MPI_SUCCESS.
<p> Whenever a communicator
is replicated using the function <a href="../man3/MPI_Comm_dup.3.php">MPI_Comm_dup</a>, all callback copy functions
for attributes that are currently set are invoked (in arbitrary order).
Whenever a communicator is deleted using the function <a href="../man3/MPI_Comm_free.3.php">MPI_Comm_free</a>, all
callback delete functions for attributes that are currently set are invoked.

<p>
<p>
<h2><a name='sect7' href='#toc7'>Notes</a></h2>
Note that it is not defined by the MPI standard what happens if
the delete_fn callback invokes other MPI functions.  In Open MPI, it is
not valid for delete_fn callbacks (or any of their children) to add or
delete attributes on the same object on which the delete_fn callback is
being invoked.
<p>
<p>
<h2><a name='sect8' href='#toc8'>Errors</a></h2>
Almost all MPI routines return an error value; C
routines as the value of the function and Fortran routines in the last
argument. C++ functions do not return errors. If the default error handler
is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception
mechanism will be used to throw an MPI::Exception object. <p>
Before the error
value is returned, the current MPI error handler is called. By default,
this error handler aborts the MPI job, except for I/O function errors. The
error handler may be changed with <a href="../man3/MPI_Comm_set_errhandler.3.php">MPI_Comm_set_errhandler</a>; the predefined
error handler MPI_ERRORS_RETURN may be used to cause error values to be
returned. Note that MPI does not guarantee that an MPI program can continue
past an error.
<p>
<h2><a name='sect9' href='#toc9'>See Also</a></h2>
<a href="../man3/MPI_Comm_delete_attr.3.php">MPI_Comm_delete_attr</a> <br>

<p> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Input Parameters</a></li>
<li><a name='toc5' href='#sect5'>Output Parameter</a></li>
<li><a name='toc6' href='#sect6'>Description</a></li>
<li><a name='toc7' href='#sect7'>Notes</a></li>
<li><a name='toc8' href='#sect8'>Errors</a></li>
<li><a name='toc9' href='#sect9'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
