<?php
$topdir = "../../..";
$title = "shmem_quiet(3) man page (version 3.1.3)";
$meta_desc = "Open MPI v3.1.3 man page: shmem_quiet(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
    <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>

<p> <i><i>shmem_quiet</i>(3)</i> - Waits for completion of all outstanding remote
writes issued by a processing element (PE).
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>

<p> C or C++: <br>
<pre>#include &lt;mpp/shmem.h&gt;
void shmem_quiet(void);
</pre> Fortran: <br>
<pre>CALL SHMEM_QUIET
</pre>
<h2><a name='sect2' href='#toc2'>Description</a></h2>

<p> shmem_quiet ensures ordering of put (remote write) operations.
All put operations issued to any processing element (PE) prior to the call
to shmem_quiet are guaranteed to be visible to all other PEs no later than
any subsequent memory load or store, remote put or get, or synchronization
operations that follow the call to shmem_quiet.
<h2><a name='sect3' href='#toc3'>Notes</a></h2>

<p> shmem_quiet is most
useful as a way of ensuring ordering of delivery of several put operations.
For example, you might use shmem_quiet to await delivery of a block of
data before issuing another put, which sets a completion flag on another
PE. <br>
shmem_quiet is not usually needed if <i><i>shmem_barrier_all</i>(3)</i> or <i><i>shmem_barrier</i>(3)</i>
are called. The barrier routines all wait for the completion of outstanding
remote writes (puts).
<h2><a name='sect4' href='#toc4'>Examples</a></h2>

<p> <br>
<pre>PROGRAM COMPFLAG
  INCLUDE "mpp/shmem.fh"
  INTEGER FLAG_VAR, ARRAY(100), RECEIVER, SENDER
  COMMON/FLAG/FLAG_VAR
  COMMON/DATA/ARRAY
  INTRINSIC MY_PE
  FLAG_VAR = 0
  CALL SHMEM_BARRIER_ALL ! wait for FLAG_VAR to be initialized
  SENDER = 0                        ! PE 0 sends the data
  RECEIVER = 1                      ! PE 1 receives the data
  IF (MY_PE() .EQ. 0) THEN
    ARRAY = 33
    CALL SHMEM_PUT(ARRAY, ARRAY, 100, RECEIVER) ! start sending data
    CALL SHMEM_QUIET                ! wait for delivery
    CALL SHMEM_PUT(FLAG_VAR, 1, 1, RECEIVER) ! send completion flag
  ELSE IF (MY_PE() .EQ. RECEIVER) THEN
    CALL SHMEM_UDCFLUSH
    CALL SHMEM_WAIT(FLAG_VAR, 0)
    PRINT *,ARRAY                       ! ARRAY has been delivered
  ENDIF
END
</pre>
<h2><a name='sect5' href='#toc5'>See Also</a></h2>

<p> <i><i>intro_shmem</i>(3)</i>, <i><i>shmem_barrier</i>(3)</i>, <i><i>shmem_barrier_all</i>(3)</i>, <i><i>shmem_fence</i>(3)</i>,
<i><i>shmem_put</i>(3)</i>, <i><i>shmem_wait</i>(3)</i> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>Description</a></li>
<li><a name='toc3' href='#sect3'>Notes</a></li>
<li><a name='toc4' href='#sect4'>Examples</a></li>
<li><a name='toc5' href='#sect5'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
