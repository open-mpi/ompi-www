<?php
$topdir = "../../..";
$title = "shmem_long_swap(3) man page (version 3.1.0)";
$meta_desc = "Open MPI v3.1.0 man page: shmem_long_swap(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
    <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>

<p> <i><i>shmem_double_swap</i>(3)</i>, <i><i>shmem_float_swap</i>(3)</i>, <i><i>shmem_int_swap</i>(3)</i>,
<i><i>shmem_long_swap</i>(3)</i>, <i><i>shmem_swap</i>(3)</i>, <i><i>shmem_int4_swap</i>(3)</i>, <i><i>shmem_int8_swap</i>(3)</i>,
<i><i>shmem_real4_swap</i>(3)</i>, <i><i>shmem_real8_swap</i>(3)</i>, <i><i>shmem_longlong_swap</i>(3)</i> - Performs
an atomic swap to a remote data object
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>

<p> C or C++: <br>
<pre>#include &lt;mpp/shmem.h&gt;
double shmem_double_swap(double *target, double value,
  int pe);
float shmem_float_swap(float *target, float value, int pe);
int shmem_int_swap(int *target, int value, int pe);
long shmem_long_swap(long *target, long value, int pe);
long long shmem_longlong_swap(long long *target,
  long long value, int pe);
long shmem_swap(long *target, long value, int pe);
</pre> Fortran: <br>
<pre>INCLUDE "mpp/shmem.fh"
INTEGER pe
INTEGER SHMEM_SWAP
ires = SHMEM_SWAP(target, value, pe)
INTEGER(KIND=4) SHMEM_INT4_SWAP
ires = SHMEM_INT4_SWAP(target, value, pe)
INTEGER(KIND=8) SHMEM_INT8_SWAP
ires = SHMEM_INT8_SWAP(target, value, pe)
REAL(KIND=4) SHMEM_REAL4_SWAP
res = SHMEM_REAL4_SWAP(target, value, pe)
REAL(KIND=8) SHMEM_REAL8_SWAP
res = SHMEM_REAL8_SWAP(target, value, pe)
</pre>
<h2><a name='sect2' href='#toc2'>Description</a></h2>

<p> The atomic swap routines write <b>value</b> to address target on
PE <b>pe</b>, and return the previous contents of <b>target</b> in one atomic operation.
<p>
The arguments are as follows:
<dl>

<dt>target </dt>
<dd>The remotely accessible integer data
object to be updated on the remote PE. If you are using C/C++, the type
of target should match that implied in the SYNOPSIS section. If you are
using Fortran, it must be of the following type: <blockquote></dd>

<dt><b>SHMEM_SWAP:</b> Integer of
default kind </dt>
<dd></dd>

<dt><b>SHMEM_INT4_SWAP:</b> 4-byte integer </dt>
<dd></dd>

<dt><b>SHMEM_INT8_SWAP:</b> 8-byte integer
</dt>
<dd></dd>

<dt><b>SHMEM_REAL4_SWAP:</b> 4-byte real </dt>
<dd></dd>

<dt><b>SHMEM_REAL8_SWAP:</b> 8-byte real </dt>
<dd></dd>
</dl>
</blockquote>
<blockquote><p>
</blockquote>

<dl>

<dt>value </dt>
<dd>Value to
be atomically written to the remote PE. value is the same type as target.
</dd>

<dt>pe </dt>
<dd>An integer that indicates the PE number on which target is to be updated.
If you are using Fortran, it must be a default integer value. </dd>
</dl>
<p>

<h2><a name='sect3' href='#toc3'>Notes</a></h2>

<p> The
term remotely accessible is defined in <i><i>intro_shmem</i>(3)</i>.
<h2><a name='sect4' href='#toc4'>Return Values</a></h2>

<p> The
contents that had been at the target address on the remote PE prior to
the swap is returned.
<h2><a name='sect5' href='#toc5'>See Also</a></h2>

<p> <i><i>intro_shmem</i>(3)</i>  <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>Description</a></li>
<li><a name='toc3' href='#sect3'>Notes</a></li>
<li><a name='toc4' href='#sect4'>Return Values</a></li>
<li><a name='toc5' href='#sect5'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
