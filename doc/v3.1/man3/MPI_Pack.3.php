<?php
$topdir = "../../..";
$title = "MPI_Pack(3) man page (version 3.1.3)";
$meta_desc = "Open MPI v3.1.3 man page: MPI_PACK(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
      <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>MPI_Pack</b> - Packs data of a given datatype into contiguous memory.

<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
int MPI_Pack(const void *inbuf, int incount, MPI_Datatype datatype,
<tt> </tt>&nbsp;<tt> </tt>&nbsp;void *outbuf, int outsize, int *position, MPI_Comm comm)
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
<br>
<pre>USE MPI
! or the older form: INCLUDE &rsquo;mpif.h&rsquo;
MPI_PACK(INBUF, INCOUNT, DATATYPE, OUTBUF,OUTSIZE, POSITION,
<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;<tt> </tt>&nbsp;COMM, IERROR)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;&lt;type&gt;<tt> </tt>&nbsp;<tt> </tt>&nbsp;INBUF(*), OUTBUF(*)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER<tt> </tt>&nbsp;<tt> </tt>&nbsp;INCOUNT, DATATYPE, OUTSIZE, POSITION, COMM, IERROR
</pre>
<h2><a name='sect4' href='#toc4'>Fortran 2008 Syntax</a></h2>
<br>
<pre>USE mpi_f08
MPI_Pack(inbuf, incount, datatype, outbuf, outsize, position, comm, ierror)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(*), DIMENSION(..), INTENT(IN) :: inbuf
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(*), DIMENSION(..) :: outbuf
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, INTENT(IN) :: incount, outsize
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Datatype), INTENT(IN) :: datatype
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, INTENT(INOUT) :: position
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Comm), INTENT(IN) :: comm
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, OPTIONAL, INTENT(OUT) :: ierror
</pre>
<h2><a name='sect5' href='#toc5'>Input Parameters</a></h2>

<dl>

<dt>inbuf </dt>
<dd>Input buffer start (choice). </dd>

<dt>incount </dt>
<dd>Number of input
data items (integer). </dd>

<dt>datatype </dt>
<dd>Datatype of each input data item (handle).
</dd>

<dt>outsize </dt>
<dd>Output buffer size, in bytes (integer). </dd>

<dt>comm </dt>
<dd>Communicator for packed
message (handle).
<p> </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Input/Output Parameter</a></h2>

<dl>

<dt>position </dt>
<dd>Current position in buffer,
in bytes (integer).
<p> </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Output Parameters</a></h2>

<dl>

<dt>outbuf </dt>
<dd>Output buffer start (choice).
</dd>

<dt>IERROR </dt>
<dd>Fortran only: Error status (integer).
<p> </dd>
</dl>

<h2><a name='sect8' href='#toc8'>Description</a></h2>
Packs the message
in the send buffer specified by <i>inbuf</i>, <i>incount</i>, <i>datatype</i> into the buffer
space specified by <i>outbuf</i> and <i>outsize</i>. The input buffer can be any communication
buffer allowed in <a href="../man3/MPI_Send.3.php">MPI_Send</a>. The output buffer is a contiguous storage area
containing <i>outsize</i> bytes, starting at the address <i>outbuf</i> (length is counted
in bytes, not elements, as if it were a communication buffer for a message
of type MPI_Packed). <p>
The input value of <i>position</i> is the first location in
the output buffer to be used for packing. <i>position</i> is incremented by the
size of the packed message, and the output value of <i>position</i> is the first
location in the output buffer following the locations occupied by the packed
message. The <i>comm</i> argument is the communicator that will be subsequently
used for sending the packed message. <p>
<b>Example:</b> An example using MPI_Pack:
<p>
<br>
<pre>    int position, i, j, a[2];
    char buff[1000];
    ....
    <a href="../man3/MPI_Comm_rank.3.php">MPI_Comm_rank</a>(MPI_COMM_WORLD, &amp;myrank);
    if (myrank == 0)
    {
       / * SENDER CODE */
    position = 0;
      MPI_Pack(&amp;i, 1, MPI_INT, buff, 1000, &amp;position, MPI_COMM_WORLD);
      MPI_Pack(&amp;j, 1, MPI_INT, buff, 1000, &amp;position, MPI_COMM_WORLD);
      <a href="../man3/MPI_Send.3.php">MPI_Send</a>( buff, position, MPI_PACKED, 1, 0, MPI_COMM_WORLD);
    }
    else  /* RECEIVER CODE */
      <a href="../man3/MPI_Recv.3.php">MPI_Recv</a>( a, 2, MPI_INT, 0, 0, MPI_COMM_WORLD)
    }
</pre>
<h2><a name='sect9' href='#toc9'>Errors</a></h2>
Almost all MPI routines return an error value; C routines as the
value of the function and Fortran routines in the last argument. C++ functions
do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS,
then on error the C++ exception mechanism will be used to throw an MPI::Exception
object. <p>
Before the error value is returned, the current MPI error handler
is called. By default, this error handler aborts the MPI job, except for
I/O function errors. The error handler may be changed with <a href="../man3/MPI_Comm_set_errhandler.3.php">MPI_Comm_set_errhandler</a>;
the predefined error handler MPI_ERRORS_RETURN may be used to cause error
values to be returned. Note that MPI does not guarantee that an MPI program
can continue past an error.
<p>
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<a href="../man3/MPI_Unpack.3.php">MPI_Unpack</a> <br>

<p><a href="../man3/MPI_Pack_size.3.php">MPI_Pack_size</a>
<p> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Fortran 2008 Syntax</a></li>
<li><a name='toc5' href='#sect5'>Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Input/Output Parameter</a></li>
<li><a name='toc7' href='#sect7'>Output Parameters</a></li>
<li><a name='toc8' href='#sect8'>Description</a></li>
<li><a name='toc9' href='#sect9'>Errors</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
