<?php
$topdir = "../../..";
$title = "MPI_Win_allocate(3) man page (version 3.1.2)";
$meta_desc = "Open MPI v3.1.2 man page: MPI_WIN_ALLOCATE(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
      <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>
<b>MPI_Win_allocate</b> - One-sided MPI call that allocates memory and
returns a window object for RMA operations.
<p>
<h2><a name='sect1' href='#toc1'>Syntax</a></h2>

<h2><a name='sect2' href='#toc2'>C Syntax</a></h2>
<br>
<pre>#include &lt;mpi.h&gt;
int MPI_Win_allocate (MPI_Aint size, int disp_unit, MPI_Info info,
                      MPI_Comm comm, void *baseptr, MPI_Win *win)
</pre>
<h2><a name='sect3' href='#toc3'>Fortran Syntax</a></h2>
<br>
<pre>USE MPI
! or the older form: INCLUDE &rsquo;mpif.h&rsquo;
MPI_WIN_ALLOCATE(SIZE, DISP_UNIT, INFO, COMM, BASEPTR, WIN, IERROR)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER(KIND=MPI_ADDRESS_KIND) SIZE, BASEPTR
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER DISP_UNIT, INFO, COMM, WIN, IERROR
</pre>
<h2><a name='sect4' href='#toc4'>Fortran 2008 Syntax</a></h2>
<br>
<pre>USE mpi_f08
MPI_Win_allocate(size, disp_unit, info, comm, baseptr, win, ierror)
<tt> </tt>&nbsp;<tt> </tt>&nbsp;USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER(KIND=MPI_ADDRESS_KIND), INTENT(IN) :: size
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, INTENT(IN) :: disp_unit
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Info), INTENT(IN) :: info
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Comm), INTENT(IN) :: comm
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(C_PTR), INTENT(OUT) :: baseptr
<tt> </tt>&nbsp;<tt> </tt>&nbsp;TYPE(MPI_Win), INTENT(OUT) :: win
<tt> </tt>&nbsp;<tt> </tt>&nbsp;INTEGER, OPTIONAL, INTENT(OUT) :: ierror
</pre>
<h2><a name='sect5' href='#toc5'>Input Parameters</a></h2>

<dl>

<dt>size </dt>
<dd>Size of window in bytes (nonnegative integer). </dd>

<dt>disp_unit
</dt>
<dd>Local unit size for displacements, in bytes (positive integer). </dd>

<dt>info </dt>
<dd>Info
argument (handle). </dd>

<dt>comm </dt>
<dd>Communicator (handle).
<p> </dd>
</dl>

<h2><a name='sect6' href='#toc6'>Output Parameters</a></h2>

<dl>

<dt>baseptr
</dt>
<dd>Initial address of window. </dd>

<dt>win </dt>
<dd>Window object returned by the call (handle).
</dd>

<dt>IERROR </dt>
<dd>Fortran only: Error status (integer).
<p> </dd>
</dl>

<h2><a name='sect7' href='#toc7'>Description</a></h2>
<b>MPI_Win_allocate</b>
is a collective call executed by all processes in the group of <i>comm</i>. On
each process, it allocates memory of at least <i>size</i> bytes, returns a pointer
to it, and returns a window object that can be used by all processes in
<i>comm</i> to perform RMA operations. The returned memory consists of <i>size</i> bytes
local to each process, starting at address <i>baseptr</i> and is associated with
the window as if the user called <b><a href="../man3/MPI_Win_create.3.php">MPI_Win_create</a></b> on existing memory. The
<i>size</i> argument may be different at each process and <i>size</i> = 0 is valid; however,
a library might allocate and expose more memory in order to create a fast,
globally symmetric allocation. The discussion of and rationales for <b><a href="../man3/MPI_Alloc_mem.3.php">MPI_Alloc_mem</a></b>
and <b><a href="../man3/MPI_Free_mem.3.php">MPI_Free_mem</a></b> in MPI-3.1 [char167] 8.2 also apply to <b>MPI_Win_allocate</b>;
in particular, see the rationale in MPI-3.1 [char167] 8.2 for an explanation
of the type used for <i>baseptr</i>. <p>
The displacement unit argument is provided
to facilitate address arithmetic in RMA operations: the target displacement
argument of an RMA operation is scaled by the factor <i>disp_unit</i> specified
by the target process, at window creation. <p>
For supported info keys see <b><a href="../man3/MPI_Win_create.3.php">MPI_Win_create</a><i>.
<p>

<p></i></b>
<h2><a name='sect8' href='#toc8'>Notes</a></h2>
Common choices for <i>disp_unit</i> are 1 (no scaling), and (in C syntax)
<i>sizeof(type)</i>, for a window that consists of an array of elements of type
<i>type</i>. The later choice will allow one to use array indices in RMA calls,
and have those scaled correctly to byte displacements, even in a heterogeneous
environment. <p>

<p>
<h2><a name='sect9' href='#toc9'>Errors</a></h2>
Almost all MPI routines return an error value; C routines
as the value of the function and Fortran routines in the last argument.
<p>
Before the error value is returned, the current MPI error handler is called.
By default, this error handler aborts the MPI job, except for I/O function
errors. The error handler may be changed with <a href="../man3/MPI_Comm_set_errhandler.3.php">MPI_Comm_set_errhandler</a>; the
predefined error handler MPI_ERRORS_RETURN may be used to cause error values
to be returned. Note that MPI does not guarantee that an MPI program can
continue past an error.
<p>
<h2><a name='sect10' href='#toc10'>See Also</a></h2>
<p>
<a href="../man3/MPI_Alloc_mem.3.php">MPI_Alloc_mem</a> <a href="../man3/MPI_Free_mem.3.php">MPI_Free_mem</a> <a href="../man3/MPI_Win_create.3.php">MPI_Win_create</a>
<a href="../man3/MPI_Win_allocate_shared.3.php">MPI_Win_allocate_shared</a> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Syntax</a></li>
<li><a name='toc2' href='#sect2'>C Syntax</a></li>
<li><a name='toc3' href='#sect3'>Fortran Syntax</a></li>
<li><a name='toc4' href='#sect4'>Fortran 2008 Syntax</a></li>
<li><a name='toc5' href='#sect5'>Input Parameters</a></li>
<li><a name='toc6' href='#sect6'>Output Parameters</a></li>
<li><a name='toc7' href='#sect7'>Description</a></li>
<li><a name='toc8' href='#sect8'>Notes</a></li>
<li><a name='toc9' href='#sect9'>Errors</a></li>
<li><a name='toc10' href='#sect10'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
