<?php
$topdir = "../../..";
$title = "shmem_barrier(3) man page (version 3.1.2)";
$meta_desc = "Open MPI v3.1.2 man page: shmem_barrier(3)";

include_once("$topdir/doc/nav.inc");
include_once("$topdir/includes/header.inc");
?>
<p> <a href="../">&laquo; Return to documentation listing</a></p>
    <!-- manual page source format generated by PolyglotMan v3.2, -->
<!-- available at http://polyglotman.sourceforge.net/ -->

<body bgcolor='white'>
<a href='#toc'>Table of Contents</a><p>

<h2><a name='sect0' href='#toc0'>Name</a></h2>

<p> shmem_barrier - Performs a barrier operation on a subset of processing
elements (PEs).
<h2><a name='sect1' href='#toc1'>Synopsis</a></h2>

<p> C or C++: <br>
<pre>#include &lt;mpp/shmem.h&gt;
void shmem_barrier(int PE_start, int logPE_stride, int PE_size,
  long *pSync);
</pre> Fortran: <br>
<pre>INCLUDE "mpp/shmem.fh"
INTEGER PE_start, logPE_stride, PE_size
INTEGER pSync(SHMEM_BARRIER_SYNC_SIZE)
CALL SHMEM_BARRIER(PE_start, logPE_stride, PE_size, pSync)
</pre>
<h2><a name='sect2' href='#toc2'>Description</a></h2>

<p> The shmem_barrier routine does not return until the subset
of PEs specified by <b>PE_start</b>, <b>logPE_stride</b> and <b>PE_size</b>, has entered this
routine at the same point of the execution path. <p>
As with all SHMEM collective
routines, each of these routines assumes that only PEs in the active set
call the routine. If a PE not in the active set calls a SHMEM collective
routine, undefined behavior results. <p>
The arguments are as follows:
<dl>

<dt>PE_start
</dt>
<dd>The lowest virtual PE number of the active set of PEs. PE_start must be
of type integer. If you are using Fortran, it must be a default integer
value. </dd>

<dt>logPE_stride </dt>
<dd>The log (base 2) of the stride between consecutive virtual
PE numbers in the active set. logPE_stride must be of type integer. If you
are using Fortran, it must be a default integer value. </dd>

<dt>PE_size </dt>
<dd>The number
of PEs in the active set. PE_size must be of type integer. If you are using
Fortran, it must be a default integer value. </dd>

<dt>pSync </dt>
<dd>A symmetric work array.
In C/C++, pSync must be of type int and size _SHMEM_BARRIER_SYNC_SIZE. In
Fortran, pSync must be of type integer and size SHMEM_BARRIER_SYNC_SIZE.
If you are using Fortran, it must be a default integer type. Every element
of this array must be initialized to 0 before any of the PEs in the active
set enter shmem_barrier the first time. </dd>
</dl>
<p>
The values of arguments PE_start,
logPE_stride, and PE_size must be equal on all PEs in the active set. The
same work array must be passed in pSync to all PEs in the active set. <p>
shmem_barrier
ensures that all previously issued local stores and previously issued remote
memory updates done by any of the PEs in the active set (by using SHMEM
calls, for example <i><i>shmem_put</i>(3)</i>) are complete before returning. <p>
The same
pSync array may be reused on consecutive calls to shmem_barrier if the
same active PE set is used. <p>

<h2><a name='sect3' href='#toc3'>Notes</a></h2>

<p> The term symmetric is defined in <i><i>intro_shmem</i>(3)</i>.
<p>
If the pSync array is initialized at run time, be sure to use some type
of synchronization, for example, a call to <i><i>shmem_barrier_all</i>(3)</i>, before
calling shmem_barrier for the first time. <p>
If the active set does not change,
shmem_barrier can be called repeatedly with the same pSync array. No additional
synchronization beyond that implied by shmem_barrier itself is necessary
in this case. <p>

<h2><a name='sect4' href='#toc4'>Examples</a></h2>

<p> C/C++ example: <br>
<pre>shmem_barrier(PE_start, logPE_stride, size, pSync);
</pre> Fortran example: <br>
<pre>INTEGER PSYNC(SHMEM_BARRIER_SYNC_SIZE)
INTEGER PE_START, LOGPE_STRIDE, PE_SIZE, PSYNC
DATA PSYNC /SHMEM_BARRIER_SYNC_SIZE*0/
CALL SHMEM_BARRIER(PE_START, LOGPE_STRIDE, PE_SIZE, PSYNC)
</pre>
<h2><a name='sect5' href='#toc5'>See Also</a></h2>

<p> <i><i>intro_shmem</i>(3)</i>, <i><i>shmem_barrier_all</i>(3)</i> <p>

<hr><p>
<a name='toc'><b>Table of Contents</b></a><p>
<ul>
<li><a name='toc0' href='#sect0'>Name</a></li>
<li><a name='toc1' href='#sect1'>Synopsis</a></li>
<li><a name='toc2' href='#sect2'>Description</a></li>
<li><a name='toc3' href='#sect3'>Notes</a></li>
<li><a name='toc4' href='#sect4'>Examples</a></li>
<li><a name='toc5' href='#sect5'>See Also</a></li>
</ul>


<p> <a href="../">&laquo; Return to documentation listing</a></p>
<?php
include_once("$topdir/includes/footer.inc");
